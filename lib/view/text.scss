%text-base {
    word-wrap: break-word;
    text-decoration: none;
}

%text-ellipsis {
    overflow: hidden;
	text-overflow: ellipsis;
}
@mixin text-overflow($lines, $width: x) {
    $line: get($lines, 1);
    $line-height: get($lines, 2, 1.15);
    flex-shrink: 1;

    $maxHeight: has($width, 'wrap');

    $height-prop: height;
    @if $maxHeight {
        $height-prop: max-height;
    }
    
    @if $line == 1 {
        display: block;
	    white-space: nowrap;
    } @else {
        display: -webkit-box;
        -webkit-line-clamp: $line;
        -webkit-box-orient: vertical;
    }
    @if unit($line-height) == "" {
        // 防止被切掉底边, 兼容性有问题
        #{$height-prop}: $line * $line-height * 1em;
    } @else {
        #{$height-prop}: $line * $line-height;
    }
    @extend %text-base;
    @extend %text-ellipsis;
    @if not $maxHeight or length($width) > 1 and not has($width, 'x') {
        @include set(width, get($width, 1));
    } @else {
        @include set(width, 100%);
    }
}

@mixin text($font, $align: x, $overflow: x) {
    @extend %text-base;
    @include set-font($font);
    @include set-i(text-align, $align, 1);
    $line-height: get($align, 2);
    $fsize: get-by($font, 'number');
    @if $line-height == x and $fsize != x {
        // 防止被切掉底边, 默认 1.15 倍行高
        $line-height: $fsize * 1.15;
    }
    @include set(line-height, $line-height);
    @if $overflow != x {
        $lines: (get($overflow, 1), $line-height);
        @include text-overflow($lines, get($overflow, 2, 100%) get($overflow, 3))
    }
}

@mixin label($padding, $color, $radius: x) {
    white-space: nowrap;
    @include set(padding, $padding);
    @include set-box($color, $radius);
}